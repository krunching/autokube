---
- hosts: "all"
  name: "Install Kube Dependencies"
  gather_facts: false
  become: true

  pre_tasks:
  - name: "Wait for instance availability"
    wait_for_connection:
      timeout: 120
  - name: "Gather facts"
    setup:

  tasks:
  - name: Set timezone to Europe/Berlin
    timezone:
      name: Europe/Berlin

  - name: install zfsutils-linux
    apt:
      name: zfsutils-linux
      state: present
   
   
  - name: install qemu-guest-agent
    apt:
      name: qemu-guest-agent
      state: present

  - name: install APT Transport HTTPS
    apt:
      name: apt-transport-https
      state: present
   
  - name: add Docker package-key
    shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg  --dearmor -o /usr/share/keyrings/docker.gpg
    args:
      creates: "/usr/share/keyrings/docker.gpg"

  - name: add Docker APT repository
    apt_repository:
     repo: deb [signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
     state: present
     filename: 'docker'   

  - name: install containerd
    apt:
      name: containerd.io
      state: present
      update_cache: true

  - name: delete containerd config file
    file:
      path: /etc/containerd/config.toml
      state: absent

  - name: create containerd default config
    shell: containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1
    args:
      creates: /etc/containerd/config.toml

  - name: set containerd start using systemd as cgroup
    shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml 

  - name: restart containerd systemd   
    systemd:
      name: containerd
      state: restarted
      daemon_reload: yes

  - name: add Kubernetes package-key
    shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    args:
      creates: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"

  - name: add Kubernetes' APT repository
    apt_repository:
     repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /
     state: present
     filename: 'kubernetes'

  - name: install kubelet
    apt:
      name: kubelet=1.30.0-1.1
      state: present
      update_cache: true

  - name: hold kubelet
    ansible.builtin.dpkg_selections:
      name: kubelet
      selection: hold

  - name: install kubeadm
    apt:
      name: kubeadm=1.30.0-1.1
      state: present

  - name: hold kubeadm
    ansible.builtin.dpkg_selections:
      name: kubeadm
      selection: hold

  - name: sysctl net.ipv4.ip_forward=1
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: yes
      state: present

- hosts: workers
  become: yes
  tasks:
  - name: install linux-modules-extra
    shell: sudo apt install -y linux-modules-extra-$(uname -r)

  - name: Add the rbd module
    community.general.modprobe:
      name: rbd
      state: present
      persistent: present
  
  - name: Add the nbd module
    community.general.modprobe:
      name: nbd
      state: present
      persistent: present

  - name: Add the nvme-tcp module
    community.general.modprobe:
      name: nvme-tcp
      state: present
      persistent: present
  
  - name: install open-iscsi
    apt:
      name: open-iscsi
      state: present

  - name: install nfs-common
    apt:
      name: nfs-common
      state: present
    
  - name: sysctl hugepages
    sysctl:
      name: vm.nr_hugepages
      value: '1024'
      sysctl_set: yes
      state: present

- hosts: control_plane
  become: yes
  tasks:
  - name: install kubectl
    apt:
      name: kubectl=1.30.0-1.1
      state: present
      force: yes

  - name: hold kubectl
    ansible.builtin.dpkg_selections:
      name: kubectl
      selection: hold
